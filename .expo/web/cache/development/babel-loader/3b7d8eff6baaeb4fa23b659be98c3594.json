{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport { ApolloClient, InMemoryCache, gql } from \"@apollo/client\";\nexport var client = new ApolloClient({\n  uri: \"https://www.fabricio-rocha.com/graphql\",\n  cache: new InMemoryCache()\n});\nexport var NODE = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n\\tquery page($language: LanguageId!, $id: String!) {\\n\\t\\tpage: nodeById(language: $language, id: $id) {\\n\\t\\t\\ttitle\\n\\t\\t\\tbundle: entityBundle\\n\\t\\t\\t... on NodePage {\\n\\t\\t\\t\\tparagraphs: fieldParagraphs {\\n\\t\\t\\t\\t\\tentity {\\n\\t\\t\\t\\t\\t\\t... on ParagraphInfoContact {\\n\\t\\t\\t\\t\\t\\t\\ttext: fieldAddress\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t... on ParagraphClients {\\n\\t\\t\\t\\t\\t\\t\\ttitle: fieldTitle\\n\\t\\t\\t\\t\\t\\t\\tclients: fieldClients {\\n\\t\\t\\t\\t\\t\\t\\t\\ttargetId\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t... on ParagraphInfobox {\\n\\t\\t\\t\\t\\t\\t\\ttitle: fieldTitle\\n\\t\\t\\t\\t\\t\\t\\tparagraph: fieldParagraph {\\n\\t\\t\\t\\t\\t\\t\\t\\tvalue: value\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tfieldLink {\\n\\t\\t\\t\\t\\t\\t\\t\\ttitle: title\\n\\t\\t\\t\\t\\t\\t\\t\\turl: url {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trouted\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tpath\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t... on ParagraphBannerMd {\\n\\t\\t\\t\\t\\t\\t\\ttitle: fieldTitle\\n\\t\\t\\t\\t\\t\\t\\tmedia: fieldMedia {\\n\\t\\t\\t\\t\\t\\t\\t\\tentity {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tentityUrl {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tpath\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\"])));","map":{"version":3,"sources":["C:/fabricio/Privado/Jobs/Academicos/react-native/recipes-app-react-native/src/data/Queries.js"],"names":["ApolloClient","InMemoryCache","gql","client","uri","cache","NODE"],"mappings":";;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,EAAsCC,GAAtC,QAAiD,gBAAjD;AAEA,OAAO,IAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAEtCI,EAAAA,GAAG,EAAE,wCAFiC;AAGtCC,EAAAA,KAAK,EAAE,IAAIJ,aAAJ;AAH+B,CAAjB,CAAf;AAMP,OAAO,IAAMK,IAAI,GAAGJ,GAAH,wsCAAV","sourcesContent":["import { ApolloClient, InMemoryCache, gql } from \"@apollo/client\";\r\n\r\nexport const client = new ApolloClient({\r\n\t// uri: \"http://freelancer.lndo.site/graphql\",\r\n\turi: \"https://www.fabricio-rocha.com/graphql\",\r\n\tcache: new InMemoryCache(),\r\n});\r\n\r\nexport const NODE = gql`\r\n\tquery page($language: LanguageId!, $id: String!) {\r\n\t\tpage: nodeById(language: $language, id: $id) {\r\n\t\t\ttitle\r\n\t\t\tbundle: entityBundle\r\n\t\t\t... on NodePage {\r\n\t\t\t\tparagraphs: fieldParagraphs {\r\n\t\t\t\t\tentity {\r\n\t\t\t\t\t\t... on ParagraphInfoContact {\r\n\t\t\t\t\t\t\ttext: fieldAddress\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t... on ParagraphClients {\r\n\t\t\t\t\t\t\ttitle: fieldTitle\r\n\t\t\t\t\t\t\tclients: fieldClients {\r\n\t\t\t\t\t\t\t\ttargetId\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t... on ParagraphInfobox {\r\n\t\t\t\t\t\t\ttitle: fieldTitle\r\n\t\t\t\t\t\t\tparagraph: fieldParagraph {\r\n\t\t\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfieldLink {\r\n\t\t\t\t\t\t\t\ttitle: title\r\n\t\t\t\t\t\t\t\turl: url {\r\n\t\t\t\t\t\t\t\t\trouted\r\n\t\t\t\t\t\t\t\t\tpath\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t... on ParagraphBannerMd {\r\n\t\t\t\t\t\t\ttitle: fieldTitle\r\n\t\t\t\t\t\t\tmedia: fieldMedia {\r\n\t\t\t\t\t\t\t\tentity {\r\n\t\t\t\t\t\t\t\t\tentityUrl {\r\n\t\t\t\t\t\t\t\t\t\tpath\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\n/*\r\nquery Node($bundle: String!) {\r\n    info: nodeQuery(\r\n        filter: {\r\n            conjunction: AND\r\n            conditions: [\r\n      { field: \"type\", value: [$bundle], operator: EQUAL }\r\n      { field: \"status\", value: [\"1\"], operator: EQUAL }\r\n    ]\r\n        }\r\n    ) {\r\n        entities {\r\n    entityLabel\r\n    entityType\r\n    ... on Node {\r\n      title\r\n    }\r\n  }\r\n    }\r\n}\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}