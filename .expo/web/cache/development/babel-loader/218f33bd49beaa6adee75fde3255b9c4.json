{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\fabricio\\\\Privado\\\\Jobs\\\\Academicos\\\\react-native\\\\recipes-app-react-native\\\\src\\\\screens\\\\Recipe\\\\RecipeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\nimport { getIngredientName, getCategoryName, getCategoryById } from \"../../data/MockDataAPI\";\nimport BackButton from \"../../components/BackButton/BackButton\";\nimport ViewIngredientsButton from \"../../components/ViewIngredientsButton/ViewIngredientsButton\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    viewportWidth = _Dimensions$get.width;\n\nvar RecipeScreen = function (_React$Component) {\n  _inherits(RecipeScreen, _React$Component);\n\n  var _super = _createSuper(RecipeScreen);\n\n  function RecipeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RecipeScreen);\n\n    _this = _super.call(this, props);\n\n    _this.renderImage = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableHighlight, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 3\n        }\n      }, React.createElement(View, {\n        style: styles.imageContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 4\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 5\n        }\n      })));\n    };\n\n    _this.onPressIngredient = function (item) {\n      var name = getIngredientName(item);\n      var ingredient = item;\n\n      _this.props.navigation.navigate(\"Ingredient\", {\n        ingredient: ingredient,\n        name: name\n      });\n    };\n\n    _this.state = {\n      activeSlide: 0\n    };\n    return _this;\n  }\n\n  _createClass(RecipeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var activeSlide = this.state.activeSlide;\n      var navigation = this.props.navigation;\n      var item = navigation.getParam(\"item\");\n      var category = getCategoryById(item.categoryId);\n      var title = getCategoryName(category.id);\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 4\n        }\n      }, React.createElement(View, {\n        style: styles.carouselContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.carousel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }\n      }, React.createElement(Carousel, {\n        ref: function ref(c) {\n          _this2.slider1Ref = c;\n        },\n        data: item.photosArray,\n        renderItem: this.renderImage,\n        sliderWidth: viewportWidth,\n        itemWidth: viewportWidth,\n        inactiveSlideScale: 1,\n        inactiveSlideOpacity: 1,\n        firstItem: 0,\n        loop: false,\n        autoplay: false,\n        autoplayDelay: 500,\n        autoplayInterval: 3000,\n        onSnapToItem: function onSnapToItem(index) {\n          return _this2.setState({\n            activeSlide: index\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }), React.createElement(Pagination, {\n        dotsLength: item.photosArray.length,\n        activeDotIndex: activeSlide,\n        containerStyle: styles.paginationContainer,\n        dotColor: \"rgba(255, 255, 255, 0.92)\",\n        dotStyle: styles.paginationDot,\n        inactiveDotColor: \"white\",\n        inactiveDotOpacity: 0.4,\n        inactiveDotScale: 0.6,\n        carouselRef: this.slider1Ref,\n        tappableDots: !!this.slider1Ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }))), React.createElement(View, {\n        style: styles.infoRecipeContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        style: styles.infoRecipeName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }\n      }, item.title), React.createElement(View, {\n        style: styles.infoContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate(\"RecipesList\", {\n            category: category,\n            title: title\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.category,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 8\n        }\n      }, getCategoryName(item.categoryId).toUpperCase()))), React.createElement(View, {\n        style: styles.infoContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }\n      }, React.createElement(Image, {\n        style: styles.infoPhoto,\n        source: require(\"../../../assets/icons/time.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }\n      }), React.createElement(Text, {\n        style: styles.infoRecipe,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }\n      }, item.time, \" minutes \")), React.createElement(View, {\n        style: styles.infoContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 6\n        }\n      }, React.createElement(ViewIngredientsButton, {\n        onPress: function onPress() {\n          var ingredients = item.ingredients;\n          var title = \"Ingredients for \" + item.title;\n          navigation.navigate(\"IngredientsDetails\", {\n            ingredients: ingredients,\n            title: title\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }\n      })), React.createElement(View, {\n        style: styles.infoContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        style: styles.infoDescriptionRecipe,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }\n      }, item.description))));\n    }\n  }]);\n\n  return RecipeScreen;\n}(React.Component);\n\nRecipeScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    headerTransparent: \"true\",\n    headerLeft: React.createElement(BackButton, {\n      onPress: function onPress() {\n        navigation.goBack();\n      },\n      __self: RecipeScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    })\n  };\n};\n\nexport { RecipeScreen as default };","map":{"version":3,"sources":["C:/fabricio/Privado/Jobs/Academicos/react-native/recipes-app-react-native/src/screens/Recipe/RecipeScreen.js"],"names":["React","styles","Carousel","Pagination","getIngredientName","getCategoryName","getCategoryById","BackButton","ViewIngredientsButton","Dimensions","get","viewportWidth","width","RecipeScreen","props","renderImage","item","imageContainer","image","uri","onPressIngredient","name","ingredient","navigation","navigate","state","activeSlide","getParam","category","categoryId","title","id","container","carouselContainer","carousel","c","slider1Ref","photosArray","index","setState","length","paginationContainer","paginationDot","infoRecipeContainer","infoRecipeName","infoContainer","toUpperCase","infoPhoto","require","infoRecipe","time","ingredients","infoDescriptionRecipe","description","Component","navigationOptions","headerTransparent","headerLeft","goBack"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;AAWA,OAAOC,MAAP;AACA,OAAOC,QAAP,IAAmBC,UAAnB,QAAqC,4BAArC;AACA,SACCC,iBADD,EAECC,eAFD,EAGCC,eAHD;AAKA,OAAOC,UAAP;AACA,OAAOC,qBAAP;;sBAEiCC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAlBC,a,mBAAPC,K;;IAEaC,Y;;;;;AAcpB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;;AADkB,UAOnBC,WAPmB,GAOL;AAAA,UAAGC,IAAH,QAAGA,IAAH;AAAA,aACb,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEf,MAAM,CAACgB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEhB,MAAM,CAACiB,KAArB;AAA4B,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAEH;AAAP,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD,CADa;AAAA,KAPK;;AAAA,UAenBI,iBAfmB,GAeC,UAACJ,IAAD,EAAU;AAC7B,UAAIK,IAAI,GAAGjB,iBAAiB,CAACY,IAAD,CAA5B;AACA,UAAIM,UAAU,GAAGN,IAAjB;;AACA,YAAKF,KAAL,CAAWS,UAAX,CAAsBC,QAAtB,CAA+B,YAA/B,EAA6C;AAAEF,QAAAA,UAAU,EAAVA,UAAF;AAAcD,QAAAA,IAAI,EAAJA;AAAd,OAA7C;AACA,KAnBkB;;AAElB,UAAKI,KAAL,GAAa;AACZC,MAAAA,WAAW,EAAE;AADD,KAAb;AAFkB;AAKlB;;;;WAgBD,kBAAS;AAAA;;AAAA,UACAA,WADA,GACgB,KAAKD,KADrB,CACAC,WADA;AAAA,UAEAH,UAFA,GAEe,KAAKT,KAFpB,CAEAS,UAFA;AAGR,UAAMP,IAAI,GAAGO,UAAU,CAACI,QAAX,CAAoB,MAApB,CAAb;AACA,UAAMC,QAAQ,GAAGtB,eAAe,CAACU,IAAI,CAACa,UAAN,CAAhC;AACA,UAAMC,KAAK,GAAGzB,eAAe,CAACuB,QAAQ,CAACG,EAAV,CAA7B;AAEA,aACC,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE9B,MAAM,CAAC+B,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE/B,MAAM,CAACgC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEhC,MAAM,CAACiC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,QAAD;AACC,QAAA,GAAG,EAAE,aAACC,CAAD,EAAO;AACX,UAAA,MAAI,CAACC,UAAL,GAAkBD,CAAlB;AACA,SAHF;AAIC,QAAA,IAAI,EAAEnB,IAAI,CAACqB,WAJZ;AAKC,QAAA,UAAU,EAAE,KAAKtB,WALlB;AAMC,QAAA,WAAW,EAAEJ,aANd;AAOC,QAAA,SAAS,EAAEA,aAPZ;AAQC,QAAA,kBAAkB,EAAE,CARrB;AASC,QAAA,oBAAoB,EAAE,CATvB;AAUC,QAAA,SAAS,EAAE,CAVZ;AAWC,QAAA,IAAI,EAAE,KAXP;AAYC,QAAA,QAAQ,EAAE,KAZX;AAaC,QAAA,aAAa,EAAE,GAbhB;AAcC,QAAA,gBAAgB,EAAE,IAdnB;AAeC,QAAA,YAAY,EAAE,sBAAC2B,KAAD;AAAA,iBAAW,MAAI,CAACC,QAAL,CAAc;AAAEb,YAAAA,WAAW,EAAEY;AAAf,WAAd,CAAX;AAAA,SAff;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAkBC,oBAAC,UAAD;AACC,QAAA,UAAU,EAAEtB,IAAI,CAACqB,WAAL,CAAiBG,MAD9B;AAEC,QAAA,cAAc,EAAEd,WAFjB;AAGC,QAAA,cAAc,EAAEzB,MAAM,CAACwC,mBAHxB;AAIC,QAAA,QAAQ,EAAC,2BAJV;AAKC,QAAA,QAAQ,EAAExC,MAAM,CAACyC,aALlB;AAMC,QAAA,gBAAgB,EAAC,OANlB;AAOC,QAAA,kBAAkB,EAAE,GAPrB;AAQC,QAAA,gBAAgB,EAAE,GARnB;AASC,QAAA,WAAW,EAAE,KAAKN,UATnB;AAUC,QAAA,YAAY,EAAE,CAAC,CAAC,KAAKA,UAVtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBD,CADD,CADD,EAkCC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEnC,MAAM,CAAC0C,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE1C,MAAM,CAAC2C,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqC5B,IAAI,CAACc,KAA1C,CADD,EAEC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE7B,MAAM,CAAC4C,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,kBAAD;AACC,QAAA,OAAO,EAAE;AAAA,iBACRtB,UAAU,CAACC,QAAX,CAAoB,aAApB,EAAmC;AAAEI,YAAAA,QAAQ,EAARA,QAAF;AAAYE,YAAAA,KAAK,EAALA;AAAZ,WAAnC,CADQ;AAAA,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE7B,MAAM,CAAC2B,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEvB,eAAe,CAACW,IAAI,CAACa,UAAN,CAAf,CAAiCiB,WAAjC,EADF,CALD,CADD,CAFD,EAcC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE7C,MAAM,CAAC4C,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD;AACC,QAAA,KAAK,EAAE5C,MAAM,CAAC8C,SADf;AAEC,QAAA,MAAM,EAAEC,OAAO,kCAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAKC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE/C,MAAM,CAACgD,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCjC,IAAI,CAACkC,IAAtC,cALD,CAdD,EAsBC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjD,MAAM,CAAC4C,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,qBAAD;AACC,QAAA,OAAO,EAAE,mBAAM;AACd,cAAIM,WAAW,GAAGnC,IAAI,CAACmC,WAAvB;AACA,cAAIrB,KAAK,GAAG,qBAAqBd,IAAI,CAACc,KAAtC;AACAP,UAAAA,UAAU,CAACC,QAAX,CAAoB,oBAApB,EAA0C;AACzC2B,YAAAA,WAAW,EAAXA,WADyC;AAEzCrB,YAAAA,KAAK,EAALA;AAFyC,WAA1C;AAIA,SARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAtBD,EAkCC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE7B,MAAM,CAAC4C,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE5C,MAAM,CAACmD,qBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4CpC,IAAI,CAACqC,WAAjD,CADD,CAlCD,CAlCD,CADD;AA2EA;;;;EArHwCrD,KAAK,CAACsD,S;;AAA3BzC,Y,CACb0C,iB,GAAoB,iBAAoB;AAAA,MAAjBhC,UAAiB,SAAjBA,UAAiB;AAC9C,SAAO;AACNiC,IAAAA,iBAAiB,EAAE,MADb;AAENC,IAAAA,UAAU,EACT,oBAAC,UAAD;AACC,MAAA,OAAO,EAAE,mBAAM;AACdlC,QAAAA,UAAU,CAACmC,MAAX;AACA,OAHF;AAAA,cALiB7C,YAKjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHK,GAAP;AAUA,C;;SAZmBA,Y","sourcesContent":["import React from \"react\";\nimport {\n\tFlatList,\n\tScrollView,\n\tText,\n\tView,\n\tTouchableOpacity,\n\tImage,\n\tDimensions,\n\tTouchableHighlight,\n} from \"react-native\";\nimport styles from \"./styles\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\nimport {\n\tgetIngredientName,\n\tgetCategoryName,\n\tgetCategoryById,\n} from \"../../data/MockDataAPI\";\nimport BackButton from \"../../components/BackButton/BackButton\";\nimport ViewIngredientsButton from \"../../components/ViewIngredientsButton/ViewIngredientsButton\";\n\nconst { width: viewportWidth } = Dimensions.get(\"window\");\n\nexport default class RecipeScreen extends React.Component {\n\tstatic navigationOptions = ({ navigation }) => {\n\t\treturn {\n\t\t\theaderTransparent: \"true\",\n\t\t\theaderLeft: (\n\t\t\t\t<BackButton\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tnavigation.goBack();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t),\n\t\t};\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactiveSlide: 0,\n\t\t};\n\t}\n\n\trenderImage = ({ item }) => (\n\t\t<TouchableHighlight>\n\t\t\t<View style={styles.imageContainer}>\n\t\t\t\t<Image style={styles.image} source={{ uri: item }} />\n\t\t\t</View>\n\t\t</TouchableHighlight>\n\t);\n\n\tonPressIngredient = (item) => {\n\t\tvar name = getIngredientName(item);\n\t\tlet ingredient = item;\n\t\tthis.props.navigation.navigate(\"Ingredient\", { ingredient, name });\n\t};\n\n\trender() {\n\t\tconst { activeSlide } = this.state;\n\t\tconst { navigation } = this.props;\n\t\tconst item = navigation.getParam(\"item\");\n\t\tconst category = getCategoryById(item.categoryId);\n\t\tconst title = getCategoryName(category.id);\n\n\t\treturn (\n\t\t\t<ScrollView style={styles.container}>\n\t\t\t\t<View style={styles.carouselContainer}>\n\t\t\t\t\t<View style={styles.carousel}>\n\t\t\t\t\t\t<Carousel\n\t\t\t\t\t\t\tref={(c) => {\n\t\t\t\t\t\t\t\tthis.slider1Ref = c;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdata={item.photosArray}\n\t\t\t\t\t\t\trenderItem={this.renderImage}\n\t\t\t\t\t\t\tsliderWidth={viewportWidth}\n\t\t\t\t\t\t\titemWidth={viewportWidth}\n\t\t\t\t\t\t\tinactiveSlideScale={1}\n\t\t\t\t\t\t\tinactiveSlideOpacity={1}\n\t\t\t\t\t\t\tfirstItem={0}\n\t\t\t\t\t\t\tloop={false}\n\t\t\t\t\t\t\tautoplay={false}\n\t\t\t\t\t\t\tautoplayDelay={500}\n\t\t\t\t\t\t\tautoplayInterval={3000}\n\t\t\t\t\t\t\tonSnapToItem={(index) => this.setState({ activeSlide: index })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\tdotsLength={item.photosArray.length}\n\t\t\t\t\t\t\tactiveDotIndex={activeSlide}\n\t\t\t\t\t\t\tcontainerStyle={styles.paginationContainer}\n\t\t\t\t\t\t\tdotColor=\"rgba(255, 255, 255, 0.92)\"\n\t\t\t\t\t\t\tdotStyle={styles.paginationDot}\n\t\t\t\t\t\t\tinactiveDotColor=\"white\"\n\t\t\t\t\t\t\tinactiveDotOpacity={0.4}\n\t\t\t\t\t\t\tinactiveDotScale={0.6}\n\t\t\t\t\t\t\tcarouselRef={this.slider1Ref}\n\t\t\t\t\t\t\ttappableDots={!!this.slider1Ref}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.infoRecipeContainer}>\n\t\t\t\t\t<Text style={styles.infoRecipeName}>{item.title}</Text>\n\t\t\t\t\t<View style={styles.infoContainer}>\n\t\t\t\t\t\t<TouchableHighlight\n\t\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t\tnavigation.navigate(\"RecipesList\", { category, title })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text style={styles.category}>\n\t\t\t\t\t\t\t\t{getCategoryName(item.categoryId).toUpperCase()}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style={styles.infoContainer}>\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tstyle={styles.infoPhoto}\n\t\t\t\t\t\t\tsource={require(\"../../../assets/icons/time.png\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Text style={styles.infoRecipe}>{item.time} minutes </Text>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style={styles.infoContainer}>\n\t\t\t\t\t\t<ViewIngredientsButton\n\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\tlet ingredients = item.ingredients;\n\t\t\t\t\t\t\t\tlet title = \"Ingredients for \" + item.title;\n\t\t\t\t\t\t\t\tnavigation.navigate(\"IngredientsDetails\", {\n\t\t\t\t\t\t\t\t\tingredients,\n\t\t\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={styles.infoContainer}>\n\t\t\t\t\t\t<Text style={styles.infoDescriptionRecipe}>{item.description}</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</ScrollView>\n\t\t);\n\t}\n}\n\n/*cooking steps\n<View style={styles.infoContainer}>\n  <Image style={styles.infoPhoto} source={require('../../../assets/icons/info.png')} />\n  <Text style={styles.infoRecipe}>Cooking Steps</Text>\n</View>\n<Text style={styles.infoDescriptionRecipe}>{item.description}</Text>\n*/\n"]},"metadata":{},"sourceType":"module"}