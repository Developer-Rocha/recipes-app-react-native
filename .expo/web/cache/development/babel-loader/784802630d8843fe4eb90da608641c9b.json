{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\fabricio\\\\Privado\\\\Jobs\\\\Academicos\\\\react-native\\\\recipes-app-react-native\\\\src\\\\screens\\\\RecipesList\\\\RecipesListScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./styles\";\nimport { getRecipes, getCategoryName } from \"../../data/MockDataAPI\";\n\nvar RecipesListScreen = function (_React$Component) {\n  _inherits(RecipesListScreen, _React$Component);\n\n  var _super = _createSuper(RecipesListScreen);\n\n  function RecipesListScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RecipesListScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onPressRecipe = function (item) {\n      _this.props.navigation.navigate(\"Recipe\", {\n        item: item\n      });\n    };\n\n    _this.renderRecipes = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        onPress: function onPress() {\n          return _this.onPressRecipe(item);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 3\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 4\n        }\n      }, React.createElement(Image, {\n        style: styles.photo,\n        source: {\n          uri: item.photo_url\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }\n      }), React.createElement(Text, {\n        style: styles.title,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }\n      }, item.title), React.createElement(Text, {\n        style: styles.category,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }\n      }, getCategoryName(item.categoryId))));\n    };\n\n    return _this;\n  }\n\n  _createClass(RecipesListScreen, [{\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      var item = navigation.getParam(\"category\");\n      var recipesArray = getRecipes(item.id);\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 4\n        }\n      }, React.createElement(FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        numColumns: 2,\n        data: recipesArray,\n        renderItem: this.renderRecipes,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.recipeId;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return RecipesListScreen;\n}(React.Component);\n\nRecipesListScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    title: navigation.getParam(\"title\")\n  };\n};\n\nexport { RecipesListScreen as default };","map":{"version":3,"sources":["C:/fabricio/Privado/Jobs/Academicos/react-native/recipes-app-react-native/src/screens/RecipesList/RecipesListScreen.js"],"names":["React","styles","getRecipes","getCategoryName","RecipesListScreen","props","onPressRecipe","item","navigation","navigate","renderRecipes","container","photo","uri","photo_url","title","category","categoryId","getParam","recipesArray","id","recipeId","Component","navigationOptions"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,UAAT,EAAqBC,eAArB;;IAEqBC,iB;;;;;AAOpB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;;AADkB,UAInBC,aAJmB,GAIH,UAACC,IAAD,EAAU;AACzB,YAAKF,KAAL,CAAWG,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B,EAAyC;AAAEF,QAAAA,IAAI,EAAJA;AAAF,OAAzC;AACA,KANkB;;AAAA,UAQnBG,aARmB,GAQH;AAAA,UAAGH,IAAH,QAAGA,IAAH;AAAA,aACf,oBAAC,kBAAD;AACC,QAAA,aAAa,EAAC,uBADf;AAEC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKD,aAAL,CAAmBC,IAAnB,CAAN;AAAA,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACU,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEV,MAAM,CAACW,KAArB;AAA4B,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAEN,IAAI,CAACO;AAAZ,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACc,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BR,IAAI,CAACQ,KAAjC,CAFD,EAGC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEd,MAAM,CAACe,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+Bb,eAAe,CAACI,IAAI,CAACU,UAAN,CAA9C,CAHD,CAJD,CADe;AAAA,KARG;;AAAA;AAElB;;;;WAmBD,kBAAS;AAAA,UACAT,UADA,GACe,KAAKH,KADpB,CACAG,UADA;AAER,UAAMD,IAAI,GAAGC,UAAU,CAACU,QAAX,CAAoB,UAApB,CAAb;AACA,UAAMC,YAAY,GAAGjB,UAAU,CAACK,IAAI,CAACa,EAAN,CAA/B;AACA,aACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,QAAD;AACC,QAAA,QAAQ,MADT;AAEC,QAAA,4BAA4B,EAAE,KAF/B;AAGC,QAAA,UAAU,EAAE,CAHb;AAIC,QAAA,IAAI,EAAED,YAJP;AAKC,QAAA,UAAU,EAAE,KAAKT,aALlB;AAMC,QAAA,YAAY,EAAE,sBAACH,IAAD;AAAA,sBAAaA,IAAI,CAACc,QAAlB;AAAA,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAYA;;;;EA5C6CrB,KAAK,CAACsB,S;;AAAhClB,iB,CACbmB,iB,GAAoB,iBAAoB;AAAA,MAAjBf,UAAiB,SAAjBA,UAAiB;AAC9C,SAAO;AACNO,IAAAA,KAAK,EAAEP,UAAU,CAACU,QAAX,CAAoB,OAApB;AADD,GAAP;AAGA,C;;SALmBd,iB","sourcesContent":["import React from \"react\";\nimport { FlatList, Text, View, TouchableHighlight, Image } from \"react-native\";\nimport styles from \"./styles\";\nimport { getRecipes, getCategoryName } from \"../../data/MockDataAPI\";\n\nexport default class RecipesListScreen extends React.Component {\n\tstatic navigationOptions = ({ navigation }) => {\n\t\treturn {\n\t\t\ttitle: navigation.getParam(\"title\"),\n\t\t};\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tonPressRecipe = (item) => {\n\t\tthis.props.navigation.navigate(\"Recipe\", { item });\n\t};\n\n\trenderRecipes = ({ item }) => (\n\t\t<TouchableHighlight\n\t\t\tunderlayColor=\"rgba(73,182,77,1,0.9)\"\n\t\t\tonPress={() => this.onPressRecipe(item)}\n\t\t>\n\t\t\t<View style={styles.container}>\n\t\t\t\t<Image style={styles.photo} source={{ uri: item.photo_url }} />\n\t\t\t\t<Text style={styles.title}>{item.title}</Text>\n\t\t\t\t<Text style={styles.category}>{getCategoryName(item.categoryId)}</Text>\n\t\t\t</View>\n\t\t</TouchableHighlight>\n\t);\n\n\trender() {\n\t\tconst { navigation } = this.props;\n\t\tconst item = navigation.getParam(\"category\");\n\t\tconst recipesArray = getRecipes(item.id);\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<FlatList\n\t\t\t\t\tvertical\n\t\t\t\t\tshowsVerticalScrollIndicator={false}\n\t\t\t\t\tnumColumns={2}\n\t\t\t\t\tdata={recipesArray}\n\t\t\t\t\trenderItem={this.renderRecipes}\n\t\t\t\t\tkeyExtractor={(item) => `${item.recipeId}`}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}